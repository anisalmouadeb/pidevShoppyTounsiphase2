@model pidevShoppyTounsi.Models.Entry

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="card">
    <div class="card-header">
        <i class="fa fa-plus"></i> Add New Stock
    </div>
    <div class="card-body">
        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.provider, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.provider.providerId, ViewBag.ProviderId as SelectList, htmlAttributes: new { @class = "form-control form-control-rounded" })
                    @Html.ValidationMessageFor(model => model.provider.providerId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.product, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.product.productId, ViewBag.ProductId as SelectList, htmlAttributes: new { @class = "form-control form-control-rounded" })
                    @Html.ValidationMessageFor(model => model.product.productId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.entryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.entryDate, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                    @Html.ValidationMessageFor(model => model.entryDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.articalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.articalPrice, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                    @Html.ValidationMessageFor(model => model.articalPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Create" class="btn btn-success">
                    <i class="fa fa-check-square-o"></i>
                    Create
                </button>
                <button type="button" value="Back To List" class="btn btn-primary" onclick="location.href='Index'">
                    <i class="fa fa-check-square-o"></i>
                    Back To list
                </button>

            </div>
            </div>
        </div>
        </div>
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
