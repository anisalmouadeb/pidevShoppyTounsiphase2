@model pidevShoppyTounsi.Models.Login.SignUpRequest

@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/LoginLayout.cshtml";
}
@{
    ViewBag.Title = "LoginRequest";
}
<link rel="icon" href="~/favicon.ico" type="image/x-icon">
<!-- Bootstrap core CSS-->
<link href="~/assets/css/bootstrap.min.css" rel="stylesheet" />
<!-- animate CSS-->
<link href="~/assets/css/animate.css" rel="stylesheet" type="text/css" />
<!-- Icons CSS-->
<link href="~/assets/css/icons.css" rel="stylesheet" type="text/css" />
<!-- Custom Style-->
<link href="~/assets/css/app-style.css" rel="stylesheet" />


<h2>Sign Up</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="wrapper">
        <div class="card  mx-auto my-1" style="width:45%">
            <div class="card-body">
                <div class="card-content p-2">
                    <div class="text-center">
                        <img src="~/assets/images/logo-icon2.png" alt="logo icon" style="width:30%">
                    </div>
                    <div class="card-title text-uppercase text-center py-3" style="font-size:25px">Sign Up</div>
                    <form>
                        <div class="form-group">
                            <label for="exampleInputName" class="" style="font-size:12px">Name</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-user"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="exampleInputEmailId" class="" style="font-size:12px">Email Address</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-envelope"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">Password</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-lock"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">Age</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.age, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-calendar"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />

                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">Cin</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.cin, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="fa fa-id-card"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.cin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />

                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">address</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.address, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-home"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />


                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">Sex</label>
                            <div class="position-relative has-icon-right">
                                @Html.EditorFor(model => model.sex, new { htmlAttributes = new { style = "font-size:15px", @class = "col-md-12 form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-user"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <label for="exampleInputPassword" class="" style="font-size:12px">Phone Number (+216)</label>
                            <div class="position-relative has-icon-right" style="font-size:12px">
                                @Html.EditorFor(model => model.numTel, new { htmlAttributes = new { style = "font-size:15px", @class = "  col-md-12 col- form-control input-shadow" } })

                                <div class="form-control-position">
                                    <i class="icon-phone"></i>
                                </div>
                                @Html.ValidationMessageFor(model => model.numTel, "", new { @default= "+216",@class = "text-danger" })
                            </div>
                        </div>

                        <br />
                        <br />
                        <div class="text-center">
                            <input type="submit" value="Sign Up" style="font-size:12px" class="btn btn-primary shadow-primary btn-block waves-effect waves-light" />
                        </div>

                    </form>
                </div>
            </div>
            <div class="card-footer text-center py-3">
                <p class="text-muted mb-0">Already have an account? <a href="/Login/LoginRequest"> Sign In here</a></p>
            </div>
            <div>
                @{
                    if (TempData["message"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible" role="alert" style="width:90% ;margin-left : 5%; height:50px">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <div class="text-center">
                                <div class="alert-message" style="margin-left : 30%">

                                    <span>@Html.Label(TempData["message"].ToString(), new { @style = "font-size:10px ;color:white;" })</span>
                                </div>
                            </div>
                        </div>

                    }
                }
            </div>

        </div>
        </div>
        <!--Start Back To Top Button-->
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                $(document).ready(function () {
                    $('body').addClass('bg-dark');
                });
            </script>
        }
