@model pidevShoppyTounsi.Models.User

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div>
    <div class="card">
        <div class="card-header">
            <i class="fa fa-eye"></i> Details of User : @Model.name
        </div>
        <div class="card-body">
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.cin, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.numTel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.numTel, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.sex, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.dateCreate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.dateCreate, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.lastLoginDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.lastLoginDate, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                </div>
            </div>
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.point, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.point, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control form-control-rounded" } })

                    </div>
                </div>
                <div>
                    @Html.LabelFor(model => model.desactivate, htmlAttributes: new { @class = "control-label col-md-2" })

                    @if (!Model.desactivate)
                    {<div class="icheck-material-success ">
                            <input type="checkbox" id="success" checked disabled />
                            <label for="success"></label>
                        </div>}
                    else
                    {<div class="icheck-material-danger">
                            <input type="checkbox" id="success" checked disabled />
                            <label for="success"></label>
                        </div>}



                </div>



                <div class="col-md-offset-2 col-md-10">
                    <button type="button" value="Back To All Orders" class="btn btn-primary" onclick="location.href='../Order'">
                        <i class="fa fa-home"></i>
                        Back To  All Orders
                    </button>
                </div>


            </div>
        </div>
    </div>
</div>