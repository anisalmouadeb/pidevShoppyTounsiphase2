@model pidevShoppyTounsi.Models.Provider

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header">
            <i class="fa fa-table"></i> Edit of Provider @ViewBag.name
            </div>
            <div class="card-body">
                <div class="form-horizontal">
                  
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.providerId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.deleviryFees, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.deleviryFees, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.deleviryFees, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.seuilMontant, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.seuilMontant, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.seuilMontant, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.reductionPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.reductionPercentage, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                            @Html.ValidationMessageFor(model => model.reductionPercentage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Disponibility, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-7">

                            @Html.EditorFor(model => model.Disponibility, new { @class = "icheck-material-success" })
                            @Html.ValidationMessageFor(model => model.Disponibility, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" value="Edit" class="btn btn-success">
                            <i class="fa fa-edit"></i>
                            Edit
                        </button>
                        <button type="button" value="Back To List" class="btn btn-primary" onclick="location.href='../Index'">
                            <i class="fa fa-home"></i>
                            Back To list
                        </button>
                    </div>
                </div>
            </div>
        </div>
}




<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.slim.js"></script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>